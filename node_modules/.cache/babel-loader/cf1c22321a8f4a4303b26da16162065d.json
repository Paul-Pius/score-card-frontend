{"ast":null,"code":"import _slicedToArray from \"/Users/decagon/Desktop/score-card-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/decagon/Desktop/score-card-frontend/src/components/profile-img/Profile.tsx\";\n\nimport React, { useState } from \"react\";\nimport Modal from \"../modal/Modal\";\nimport \"./Profile.css\";\n\nvar Profile = function Profile(_ref) {\n  var pic = _ref.pic,\n      text = _ref.text,\n      stackRole = _ref.stackRole,\n      imageHeight = _ref.imageHeight,\n      imageWidth = _ref.imageWidth,\n      textFontSize = _ref.textFontSize,\n      textColor = _ref.textColor,\n      textFontFamily = _ref.textFontFamily,\n      textFontWeight = _ref.textFontWeight,\n      textBackgroundColor = _ref.textBackgroundColor,\n      alignText = _ref.alignText;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(new FormData()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setFormData = _useState4[1];\n\n  var toggleClick = function toggleClick() {\n    setIsOpen(!isOpen); // console.log(isOpen);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    console.log(formData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile--container\",\n    onClick: toggleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, pic && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"profile--img\",\n    height: imageHeight,\n    width: imageWidth,\n    src: pic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile--name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: {\n        textFontSize: textFontSize\n      } ? textFontSize : \"1.5rem\",\n      color: textColor ? textColor : \"#000000\",\n      fontFamily: textFontFamily ? textFontFamily : \"sans-serif\",\n      fontWeight: textFontWeight ? textFontWeight : \"400\",\n      // backgroundColor: textBackgroundColor ? textBackgroundColor : '#F8F9FA',\n      margin: \"auto\",\n      display: \"inline-block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, text))), isOpen && /*#__PURE__*/React.createElement(Modal, {\n    onClose: function onClose() {\n      return setIsOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 18\n    }\n  }));\n};\n\nexport default Profile;","map":{"version":3,"names":["React","useState","Modal","Profile","pic","text","stackRole","imageHeight","imageWidth","textFontSize","textColor","textFontFamily","textFontWeight","textBackgroundColor","alignText","isOpen","setIsOpen","FormData","formData","setFormData","toggleClick","handleSubmit","e","console","log","fontSize","color","fontFamily","fontWeight","margin","display"],"sources":["/Users/decagon/Desktop/score-card-frontend/src/components/profile-img/Profile.tsx"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\nimport React, { useState } from \"react\";\nimport Modal from \"../modal/Modal\";\nimport \"./Profile.css\";\n\ntype ProfileProps = {\n  children?: React.ReactNode;\n  pic?: any;\n  text?: string;\n  stackRole?: string;\n  imageHeight?: string;\n  imageWidth?: string;\n  textFontSize?: string;\n  textColor?: string;\n  textFontFamily?: string;\n  textFontWeight?: string;\n  textBackgroundColor?: string;\n  alignText?: string;\n};\n\nconst Profile = ({\n  pic,\n  text,\n  stackRole,\n  imageHeight,\n  imageWidth,\n  textFontSize,\n  textColor,\n  textFontFamily,\n  textFontWeight,\n  textBackgroundColor,\n  alignText,\n}: ProfileProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [formData, setFormData] = useState<FormData>(new FormData());\n\n  const toggleClick = () => {\n    setIsOpen(!isOpen);\n    // console.log(isOpen);\n  };\n\n  const handleSubmit = (e: any) => {\n    console.log(formData);\n  }\n\n  return (\n    <>\n      <div className=\"profile--container\" onClick={toggleClick}>\n        {pic && (\n          <>\n            <img\n              className=\"profile--img\"\n              height={imageHeight}\n              width={imageWidth}\n              src={pic}\n            />\n            {/* <form className=\"profile--form\" >\n              <input \n                type='file'\n                name=\"img\"\n                onChange={(e) => {\n                  const fileList = e.target.files || [];\n                  if (fileList.length > 0) {\n                    const file = fileList[0];\n                    // return setFormData(formData => formData.append(\"img\", file));\n                  }\n                  // setFormData({ ...formData, img: e?.currentTarget?.files[0] ? e?.currentTarget?.files[0] :  null })\n                }\n              }\n              />\n              <button onClick={handleSubmit}>\n                Upload\n              </button>\n            </form> */}\n\n          </>\n        )}\n        <div className=\"profile--name\">\n          <span\n            style={{\n              fontSize: { textFontSize } ? textFontSize : \"1.5rem\",\n              color: textColor ? textColor : \"#000000\",\n              fontFamily: textFontFamily ? textFontFamily : \"sans-serif\",\n              fontWeight: textFontWeight ? textFontWeight : \"400\",\n              // backgroundColor: textBackgroundColor ? textBackgroundColor : '#F8F9FA',\n              margin: \"auto\",\n              display: \"inline-block\",\n            }}\n          >\n            {text}\n          </span>\n        </div>\n      </div>\n      {isOpen && <Modal onClose={() => setIsOpen(false)} />}\n    </>\n  );\n};\n\nexport default Profile;\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,eAAP;;AAiBA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAYI;EAAA,IAXlBC,GAWkB,QAXlBA,GAWkB;EAAA,IAVlBC,IAUkB,QAVlBA,IAUkB;EAAA,IATlBC,SASkB,QATlBA,SASkB;EAAA,IARlBC,WAQkB,QARlBA,WAQkB;EAAA,IAPlBC,UAOkB,QAPlBA,UAOkB;EAAA,IANlBC,YAMkB,QANlBA,YAMkB;EAAA,IALlBC,SAKkB,QALlBA,SAKkB;EAAA,IAJlBC,cAIkB,QAJlBA,cAIkB;EAAA,IAHlBC,cAGkB,QAHlBA,cAGkB;EAAA,IAFlBC,mBAEkB,QAFlBA,mBAEkB;EAAA,IADlBC,SACkB,QADlBA,SACkB;;EAAA,gBACUb,QAAQ,CAAC,KAAD,CADlB;EAAA;EAAA,IACXc,MADW;EAAA,IACHC,SADG;;EAAA,iBAEcf,QAAQ,CAAW,IAAIgB,QAAJ,EAAX,CAFtB;EAAA;EAAA,IAEXC,QAFW;EAAA,IAEDC,WAFC;;EAIlB,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBJ,SAAS,CAAC,CAACD,MAAF,CAAT,CADwB,CAExB;EACD,CAHD;;EAKA,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAY;IAC/BC,OAAO,CAACC,GAAR,CAAYN,QAAZ;EACD,CAFD;;EAIA,oBACE,uDACE;IAAK,SAAS,EAAC,oBAAf;IAAoC,OAAO,EAAEE,WAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGhB,GAAG,iBACF,uDACE;IACE,SAAS,EAAC,cADZ;IAEE,MAAM,EAAEG,WAFV;IAGE,KAAK,EAAEC,UAHT;IAIE,GAAG,EAAEJ,GAJP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAFJ,eA8BE;IAAK,SAAS,EAAC,eAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,KAAK,EAAE;MACLqB,QAAQ,EAAE;QAAEhB,YAAY,EAAZA;MAAF,IAAmBA,YAAnB,GAAkC,QADvC;MAELiB,KAAK,EAAEhB,SAAS,GAAGA,SAAH,GAAe,SAF1B;MAGLiB,UAAU,EAAEhB,cAAc,GAAGA,cAAH,GAAoB,YAHzC;MAILiB,UAAU,EAAEhB,cAAc,GAAGA,cAAH,GAAoB,KAJzC;MAKL;MACAiB,MAAM,EAAE,MANH;MAOLC,OAAO,EAAE;IAPJ,CADT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAWGzB,IAXH,CADF,CA9BF,CADF,EA+CGU,MAAM,iBAAI,oBAAC,KAAD;IAAO,OAAO,EAAE;MAAA,OAAMC,SAAS,CAAC,KAAD,CAAf;IAAA,CAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EA/Cb,CADF;AAmDD,CA5ED;;AA8EA,eAAeb,OAAf"},"metadata":{},"sourceType":"module"}