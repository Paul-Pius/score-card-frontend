{"ast":null,"code":"import _slicedToArray from \"/Users/decagon/Desktop/score-card-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/decagon/Desktop/score-card-frontend/src/pages/getUsers/getUsers.tsx\";\n\n/* eslint-disable no-restricted-globals */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./getUsers.css\";\nimport ActionModal from \"./ActionModal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Table, Tr, Th, Tbody, Thead } from \"../../styling/css\"; // import {devManagement, activateDevAccount, deactivateDevAccount, deleteDevAccount,updateDevAccount} from \"../../utils/api\";\n\nvar GetUsers = function GetUsers() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var history = useNavigate();\n  var token = localStorage.getItem(\"token\");\n  useEffect(function () {\n    var res = axios.get(\"\".concat(process.env.REACT_APP_BASE_URL, \"/admin/getusers\"), {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    });\n    res.then(function (_ref) {\n      var data = _ref.data;\n      setData(data); // console.log(data);\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  }, []); //   if (res.message && res.message.match(/activated successfully/gi)) {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"success\",\n  //         title: \"Successful\",\n  //         text: `${res.message}`,\n  //         confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Great!',\n  //         confirmButtonAriaLabel: \"Thumbs up, great!\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   } else {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"error\",\n  //         title: \"Failed\",\n  //         text: `${res.message}`,\n  //         showDenyButton: true,\n  //         denyButtonText: \"Try again\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   }\n  // };\n  // const deactivateUser = async (id: string) => {\n  //   const res = await deactivateDevAccount(id);\n  //   if (res.message && res.message.match(/successfully deactivated/gi)) {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"success\",\n  //         title: \"Successful\",\n  //         text: `${res.message}`,\n  //         confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Great!',\n  //         confirmButtonAriaLabel: \"Thumbs up, great!\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   } else {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"error\",\n  //         title: \"Failed\",\n  //         text: `${res.message}`,\n  //         showDenyButton: true,\n  //         denyButtonText: \"Try again\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   }\n  // };\n  // const deleteUser = async (id: string) => {\n  //   const res = await deleteDevAccount(id);\n  //   if (res.message && res.message.match(/has been removed/gi)) {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"success\",\n  //         title: \"Successful\",\n  //         text: `${res.message}`,\n  //         confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Great!',\n  //         confirmButtonAriaLabel: \"Thumbs up, great!\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   } else {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"error\",\n  //         title: \"Failed\",\n  //         text: `${res.error}`,\n  //         showDenyButton: true,\n  //         denyButtonText: \"Try again\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   }\n  // };\n  // const updateUserAcct = async (\n  //   id: string,\n  //   firstname: string,\n  //   lastname: string,\n  //   phone: string,\n  //   squad: string,\n  //   stack: string\n  // ) => {\n  //   const res = await updateDevAccount(\n  //     id,\n  //     firstname,\n  //     lastname,\n  //     phone,\n  //     squad,\n  //     stack\n  //   );\n  //   console.log(res)\n  //   if (res.message && res.message.match(/Updated successfully/gi)) {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"success\",\n  //         title: \"Successful\",\n  //         text: `${res.message}`,\n  //         confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Great!',\n  //         confirmButtonAriaLabel: \"Thumbs up, great!\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   } else {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"error\",\n  //         title: \"Failed\",\n  //         text: `Something went wrong.`,\n  //         showDenyButton: true,\n  //         denyButtonText: \"Try again\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   }\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outer-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Thead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tr, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Th, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(Th, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Th, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"Stack\"), /*#__PURE__*/React.createElement(Th, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, \"Squad\"), /*#__PURE__*/React.createElement(Th, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(Tbody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, data.map(function (user) {\n    return /*#__PURE__*/React.createElement(ActionModal, {\n      key: user.id,\n      users: user,\n      token: token,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    });\n  }))))));\n};\n\nexport default GetUsers;","map":{"version":3,"names":["React","useState","useEffect","axios","ActionModal","useNavigate","Table","Tr","Th","Tbody","Thead","GetUsers","data","setData","history","token","localStorage","getItem","res","get","process","env","REACT_APP_BASE_URL","headers","Authorization","then","catch","err","console","error","map","user","id"],"sources":["/Users/decagon/Desktop/score-card-frontend/src/pages/getUsers/getUsers.tsx"],"sourcesContent":["/* eslint-disable no-restricted-globals */\nimport React, { FC, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./getUsers.css\";\nimport ActionModal from \"./ActionModal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Table, Tr, Th, Td, Tbody, Thead } from \"../../styling/css\"\n// import {devManagement, activateDevAccount, deactivateDevAccount, deleteDevAccount,updateDevAccount} from \"../../utils/api\";\nimport Swal from \"sweetalert2\";\n\n// interface IUser {\n//   firstname: String;\n//   lastname: String;\n//   email: String;\n//   stack: String;\n//   squad: Number;\n//   isActive: Boolean;\n//   profilePicture: String;\n//   phoneNumber: String;\n//   password?: String;\n//   token: String;\n//   role: String;\n//   createdAt?: String;\n//   updatedAt?: String;\n// }\n// type userProps = {};\n\n// const GetUsers: FC = (props: userProps) => {\n//   const [users, setUsers] = useState([]);\n//   const [buffer, setBuffer] = useState(false)\n//   const [formModal, setFormModal] = useState(false)\n\n//  \n\n//  const handleModals = (e: any)=> {\n//   setBuffer(!buffer)\n//   formModal ? setFormModal(!formModal) : ''\n//  } \n  \n\n//   return (\n//     <div onClick={handleModals} >\n//       <h1>Edit User</h1>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Full Name</th>\n//             <th>Email</th>\n//             <th>Stack</th>\n//             <th>Squad</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.length &&\n//             users.map((user: IUser, index: number) => (\n//             <ActionModal index={index} user={user} key={index} bool={buffer} token={token} data-email={user.email}/> \n//             ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n\n\n\n\ninterface UserType {\n  id?: string;\n  firstname?: string;\n  lastname?: string;\n  email?: string;\n  stack?: string;\n  squad?: string;\n}\nconst GetUsers = () => {\n  let [data, setData] = useState([]);\n  const history = useNavigate()\n  const token: string | null = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    const res = axios.get(`${process.env.REACT_APP_BASE_URL}/admin/getusers`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    res\n      .then(({ data }) => {\n        setData(data);\n        // console.log(data);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n  \n      \n  //   if (res.message && res.message.match(/activated successfully/gi)) {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"success\",\n  //         title: \"Successful\",\n  //         text: `${res.message}`,\n  //         confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Great!',\n  //         confirmButtonAriaLabel: \"Thumbs up, great!\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   } else {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"error\",\n  //         title: \"Failed\",\n  //         text: `${res.message}`,\n  //         showDenyButton: true,\n  //         denyButtonText: \"Try again\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   }\n  // };\n  // const deactivateUser = async (id: string) => {\n  //   const res = await deactivateDevAccount(id);\n  //   if (res.message && res.message.match(/successfully deactivated/gi)) {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"success\",\n  //         title: \"Successful\",\n  //         text: `${res.message}`,\n  //         confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Great!',\n  //         confirmButtonAriaLabel: \"Thumbs up, great!\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   } else {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"error\",\n  //         title: \"Failed\",\n  //         text: `${res.message}`,\n  //         showDenyButton: true,\n  //         denyButtonText: \"Try again\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   }\n  // };\n  // const deleteUser = async (id: string) => {\n  //   const res = await deleteDevAccount(id);\n  //   if (res.message && res.message.match(/has been removed/gi)) {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"success\",\n  //         title: \"Successful\",\n  //         text: `${res.message}`,\n  //         confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Great!',\n  //         confirmButtonAriaLabel: \"Thumbs up, great!\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   } else {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"error\",\n  //         title: \"Failed\",\n  //         text: `${res.error}`,\n  //         showDenyButton: true,\n  //         denyButtonText: \"Try again\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   }\n  // };\n  // const updateUserAcct = async (\n  //   id: string,\n  //   firstname: string,\n  //   lastname: string,\n  //   phone: string,\n  //   squad: string,\n  //   stack: string\n  // ) => {\n  //   const res = await updateDevAccount(\n  //     id,\n  //     firstname,\n  //     lastname,\n  //     phone,\n  //     squad,\n  //     stack\n  //   );\n  //   console.log(res)\n  //   if (res.message && res.message.match(/Updated successfully/gi)) {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"success\",\n  //         title: \"Successful\",\n  //         text: `${res.message}`,\n  //         confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Great!',\n  //         confirmButtonAriaLabel: \"Thumbs up, great!\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   } else {\n  //     setTimeout(() => {\n  //       Swal.fire({\n  //         position: \"top\",\n  //         icon: \"error\",\n  //         title: \"Failed\",\n  //         text: `Something went wrong.`,\n  //         showDenyButton: true,\n  //         denyButtonText: \"Try again\",\n  //         confirmButtonColor: \"#93d413\",\n  //       });\n  //     }, 100);\n  //   }\n  // };\n  return (\n    <div className=\"outer-box\">\n      <div className=\"box-container\">\n        {/* <div className=\"link-container\">\n          <button onClick={() => history(-1)} className=\"link-box\">\n            \n            <p>Go back</p>\n          </button>\n        </div> */}\n        {/* <div className=\"devs-box\">\n          <h4>Decadevs</h4>\n        </div> */}\n        <div>\n          <Table className=\"table-container\">\n            <Thead >\n              <Tr>\n                <Th>Full Name</Th>\n                <Th>Email</Th>\n                <Th>Stack</Th>\n                <Th>Squad</Th>\n                <Th>Action</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data.map((user: UserType) => (\n                <ActionModal\n                  key={user.id}\n                  users={user}\n                  token={token as string}\n                />\n              ))}\n            </Tbody>\n          </Table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default GetUsers\n"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,EAAgBC,EAAhB,EAAoBC,EAApB,EAA4BC,KAA5B,EAAmCC,KAAnC,QAAgD,mBAAhD,C,CACA;;AAqEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EAAA,gBACCV,QAAQ,CAAC,EAAD,CADT;EAAA;EAAA,IAChBW,IADgB;EAAA,IACVC,OADU;;EAErB,IAAMC,OAAO,GAAGT,WAAW,EAA3B;EACA,IAAMU,KAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA7B;EAEAf,SAAS,CAAC,YAAM;IACd,IAAMgB,GAAG,GAAGf,KAAK,CAACgB,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,kBAAzB,sBAA8D;MACxEC,OAAO,EAAE;QACPC,aAAa,mBAAYT,KAAZ;MADN;IAD+D,CAA9D,CAAZ;IAKAG,GAAG,CACAO,IADH,CACQ,gBAAc;MAAA,IAAXb,IAAW,QAAXA,IAAW;MAClBC,OAAO,CAACD,IAAD,CAAP,CADkB,CAElB;IACD,CAJH,EAKGc,KALH,CAKS,UAACC,GAAD;MAAA,OAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAT;IAAA,CALT;EAMD,CAZQ,EAYN,EAZM,CAAT,CALqB,CAoBroBACE;IAAK,SAAS,EAAC,WAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,eAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAUE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IAAO,SAAS,EAAC,iBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,EAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,EAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eADF,eAEE,oBAAC,EAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAFF,eAGE,oBAAC,EAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAHF,eAIE,oBAAC,EAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAJF,eAKE,oBAAC,EAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YALF,CADF,CADF,eAUE,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGf,IAAI,CAACkB,GAAL,CAAS,UAACC,IAAD;IAAA,oBACR,oBAAC,WAAD;MACE,GAAG,EAAEA,IAAI,CAACC,EADZ;MAEE,KAAK,EAAED,IAFT;MAGE,KAAK,EAAEhB,KAHT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADQ;EAAA,CAAT,CADH,CAVF,CADF,CAVF,CADF,CADF;AAqCD,CAtLD;;AAyLA,eAAeJ,QAAf"},"metadata":{},"sourceType":"module"}