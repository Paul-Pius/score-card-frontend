{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/decagon/Desktop/score-card-frontend/src/components/buttons/Buttons.tsx\";\n\nimport React from \"react\";\nimport \"./Button.css\";\nvar STYLES = [\"btn-grad--solid\"];\nvar SIZES = [\"btn--medium\", \"btn--small\"];\n\nvar Buttons = function Buttons(_ref) {\n  var children = _ref.children,\n      handleClick = _ref.handleClick,\n      buttonStyle = _ref.buttonStyle,\n      buttonSize = _ref.buttonSize,\n      buttonType = _ref.buttonType,\n      buttonText = _ref.buttonText;\n  var checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  var checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn \".concat(checkButtonStyle, \" \").concat(checkButtonSize, \" \").concat(buttonType),\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default Buttons;","map":{"version":3,"names":["React","STYLES","SIZES","Buttons","children","handleClick","buttonStyle","buttonSize","buttonType","buttonText","checkButtonStyle","includes","checkButtonSize"],"sources":["/Users/decagon/Desktop/score-card-frontend/src/components/buttons/Buttons.tsx"],"sourcesContent":["import React, { MouseEventHandler } from \"react\";\nimport \"./Button.css\";\n\ntype ButtonProps = {\n  children?: React.ReactNode,\n  handleClick?: MouseEventHandler<HTMLButtonElement> | undefined,\n  buttonStyle?: string,\n  buttonSize?: string,\n  buttonType?: string,\n  buttonText?: string,\n};\n\nconst STYLES: any = [\n  \"btn-grad--solid\",\n]\n\nconst SIZES: any = [\n  \"btn--medium\",\n  \"btn--small\",\n]\n\nconst Buttons = ({\n  children,\n  handleClick,\n  buttonStyle,\n  buttonSize,\n  buttonType,\n  buttonText,\n}: ButtonProps) => {\n\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n  return(\n    <>\n      <button className={`btn ${checkButtonStyle} ${checkButtonSize} ${buttonType}`} onClick={handleClick}>{children}</button>\n    </>\n  );\n};\n\nexport default Buttons;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAO,cAAP;AAWA,IAAMC,MAAW,GAAG,CAClB,iBADkB,CAApB;AAIA,IAAMC,KAAU,GAAG,CACjB,aADiB,EAEjB,YAFiB,CAAnB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAOG;EAAA,IANjBC,QAMiB,QANjBA,QAMiB;EAAA,IALjBC,WAKiB,QALjBA,WAKiB;EAAA,IAJjBC,WAIiB,QAJjBA,WAIiB;EAAA,IAHjBC,UAGiB,QAHjBA,UAGiB;EAAA,IAFjBC,UAEiB,QAFjBA,UAEiB;EAAA,IADjBC,UACiB,QADjBA,UACiB;EAEjB,IAAMC,gBAAgB,GAAGT,MAAM,CAACU,QAAP,CAAgBL,WAAhB,IAA+BA,WAA/B,GAA6CL,MAAM,CAAC,CAAD,CAA5E;EAEA,IAAMW,eAAe,GAAGV,KAAK,CAACS,QAAN,CAAeJ,UAAf,IAA6BA,UAA7B,GAA0CL,KAAK,CAAC,CAAD,CAAvE;EAEA,oBACE,uDACE;IAAQ,SAAS,gBAASQ,gBAAT,cAA6BE,eAA7B,cAAgDJ,UAAhD,CAAjB;IAA+E,OAAO,EAAEH,WAAxF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAsGD,QAAtG,CADF,CADF;AAKD,CAlBD;;AAoBA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}